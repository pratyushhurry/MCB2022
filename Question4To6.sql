--Question 4


CREATE OR REPLACE PROCEDURE SP_Q4 AS C1 SYS_REFCURSOR;
  BEGIN
  Open C1 for

  SELECT
TO_NUMBER(SUBSTR(ol.ORDER_REF,3)) as Order_Reference,
ol.INVOICE_REFERENCE as Invoice_Reference,
TO_CHAR(o.ORDER_DATE,'MON-YYYY') as Order_Period,
INITCAP(ol.SUPPLIER_NAME) as Supplier_Name,
TO_CHAR(o.ORDER_TOTAL_AMOUNT, '99,999,999.00') as Order_Total_Amount,
o.ORDER_STATUS as Order_Status,
TO_CHAR(SUM(ol.INVOICE_AMOUNT),'99,999,999.00') as Invoice_Total_Amount,
--ol.INVOICE_STATUS as Invoice_Status,
CASE
  WHEN INVOICE_STATUS = 'Paid'  THEN 'OK'
  WHEN INVOICE_STATUS = 'Pending' THEN 'To follow up'
  WHEN INVOICE_STATUS IS NULL  THEN 'To verify'
END as Invoice_Status
FROM ORDER_TABLE o, ORDER_LINES_FACT ol
WHERE o.ORDER_REF = ol.ORDER_REF
GROUP BY ol.ORDER_REF, ol.INVOICE_REFERENCE,o.ORDER_DATE,ol.SUPPLIER_NAME,o.ORDER_TOTAL_AMOUNT,o.ORDER_STATUS, ol.invoice_status
ORDER BY o.ORDER_DATE desc;

  DBMS_SQL.RETURN_RESULT(C1);  
  END SP_Q4;

---- 
set SERVEROUTPUT ON; 
begin
SP_Q4(); 
end;

----

--Question 5

create or replace PROCEDURE SP_Q5 AS C2 SYS_REFCURSOR;
  BEGIN
Open C2 for
    SELECT ORDER_REFERENCE, ORDER_DATE, SUPPLIER_NAME, ORDER_TOTAL_AMOUNT, ORDER_STATUS, INVOICE_REFERENCES from
    (SELECT ORDER_REFERENCE, ORDER_DATE, SUPPLIER_NAME, ORDER_TOTAL_AMOUNT, ORDER_STATUS
    FROM(
    SELECT TO_NUMBER(SUBSTR(ORDER_TABLE.ORDER_REF,3)) as Order_Reference,
    to_char(ORDER_TABLE.ORDER_DATE, 'Month dd, YYYY') as Order_Date,
    ORDER_TABLE.SUPPLIER_NAME as Supplier_Name,
    TO_CHAR(ORDER_TABLE.ORDER_TOTAL_AMOUNT, '99,999,999.00') as Order_Total_Amount,
    ORDER_TABLE.ORDER_STATUS,
    dense_rank() OVER(ORDER BY ORDER_TOTAL_AMOUNT DESC)n FROM ORDER_TABLE)
    WHERE n=2) Q1
    LEFT JOIN
    (SELECT TO_NUMBER(SUBSTR(ORDER_REF,3)) as ORDER_REF, LISTAGG(INVOICE_REFERENCE, ',') WITHIN GROUP (ORDER BY INVOICE_REFERENCE) as INVOICE_REFERENCES
    FROM (
    SELECT distinct OL.INVOICE_REFERENCE ,OL.ORDER_REF
    FROM ORDER_LINES_FACT OL
    )
    GROUP BY ORDER_REF) Q2
    ON Q1.ORDER_REFERENCE = Q2.ORDER_REF;

      DBMS_SQL.RETURN_RESULT(C2);  
  END SP_Q5;

---- 
set SERVEROUTPUT ON; 
begin
SP_Q5(); 
end;
-----


--Question 6

create or replace PROCEDURE SP_Q6 AS C3 SYS_REFCURSOR;
  BEGIN
Open C3 for   
    SELECT
    O.SUPPLIER_NAME,
    S.SUPP_CONTACT_NAME,
    S.SUPPLIER_CONTACT_NUMBER_1,
    S.SUPPLIER_CONTACT_NUMBER_2,
    COUNT(distinct(O.ORDER_REF)) as TOTAL_ORDERS,
    TO_CHAR(SUM(DISTINCT(O.ORDER_TOTAL_AMOUNT)), '99,999,999.00') as ORDER_TOTAL_AMOUNT
    FROM ORDER_TABLE O, ORDER_LINES_FACT OL, SUPPLIER_TABLE S
    WHERE O.ORDER_REF = OL.ORDER_REF AND OL.SUPPLIER_NAME = S.SUPPLIER_NAME AND S.SUPPLIER_NAME = O.SUPPLIER_NAME AND O.SUPPLIER_NAME = OL.SUPPLIER_NAME
    AND O.ORDER_DATE <= TO_DATE('31/08/2022', 'DD/MM/YYYY') AND O.ORDER_DATE >= TO_DATE('01/01/2022', 'DD/MM/YYYY')
    GROUP BY O.SUPPLIER_NAME, S.SUPP_CONTACT_NAME,S.SUPPLIER_CONTACT_NUMBER_1 , S.SUPPLIER_CONTACT_NUMBER_2;

   DBMS_SQL.RETURN_RESULT(C3); 
  END SP_Q6;

----
  
begin
SP_Q6(); 
end;

----